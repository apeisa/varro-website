<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8"/>
        <meta name="viewport" content="width=device-width, initial-scale=1"/>
        <meta name="color-scheme" content="light dark"/>
        <title>{{ title or "Varro Software" }}</title>
        <link rel="preconnect" href="https://fonts.googleapis.com">
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
        <link href="https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@400;500;700&display=swap" rel="stylesheet">
        <script>
            // Initialize theme ASAP to avoid flash of incorrect theme
            (function () {
                try {
                    var stored = localStorage.getItem('theme');
                    var prefersDark = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;
                    var theme = stored || (
                        prefersDark
                        ? 'dark'
                        : 'light');
                    document.documentElement.setAttribute('data-theme', theme);
                } catch (e) {}
            })();
        </script>
        <style>:root
        {
            --yellow: #FFD600;
            --black: #111111;
            --white: #ffffff;
            --gray: #BDBDBD;
        }
        html {
            color-scheme: light dark;
        }
        * {
            box-sizing: border-box;
        }
        html,
        body {
            min-height: 100%;
            background: var(--black);
        }
        body {
            margin: 0;
            font-family: 'Space Grotesk', system-ui, -apple-system, Segoe UI, Roboto, Arial, sans-serif;
            background: var(--white);
            color: var(--black);
            line-height: 1.4;
            text-rendering: optimizeLegibility;
            -webkit-font-smoothing: antialiased;
            -moz-osx-font-smoothing: grayscale;
        }
        main {
            background: var(--white);
        }
        /* Theme toggle button */
        .theme-toggle {
            position: fixed;
            top: 14px;
            right: 14px;
            width: 46px;
            height: 46px;
            display: grid;
            place-items: center;
            background: var(--yellow);
            color: var(--black);
            border: 3px solid var(--black);
            border-radius: 999px;
            cursor: pointer;
            z-index: 1000;
        }
        .theme-toggle:focus-visible {
            outline: 2px solid currentColor;
            outline-offset: 3px;
        }
        .theme-toggle svg {
            width: 22px;
            height: 22px;
        }
        /* Home link button (top-left) */
        .home-link {
            position: fixed;
            top: 14px;
            left: 14px;
            width: 46px;
            height: 46px;
            display: grid;
            place-items: center;
            background: var(--yellow);
            color: var(--black);
            border: 3px solid var(--black);
            border-radius: 999px;
            text-decoration: none;
            z-index: 1000;
        }
        .home-link:focus-visible {
            outline: 2px solid currentColor;
            outline-offset: 3px;
        }
        .home-link svg {
            width: 22px;
            height: 22px;
        }
        .icon {
            display: none;
        }
        [data-theme="light"] .icon-moon {
            display: block;
        }
        [data-theme="dark"] .icon-sun {
            display: block;
        }
        .container {
            width: 100%;
            max-width: 1100px;
            margin: 0 auto;
            padding: 0 1.25rem;
        }
        .container--wide {
            max-width: 1400px;
        }
        .container--full {
            max-width: none;
            width: 100%;
            padding-left: 1rem;
            padding-right: 1rem;
        }
        /* Header removed for a cleaner, hero-first layout */
        /* Typography */
        h1 {
            font-size: clamp(2.75rem, 7.5vw, 5.5rem);
            line-height: 1.05;
            margin: 0 0 0.75rem;
            font-weight: 700;
        }
        h2 {
            font-size: clamp(1.75rem, 3.5vw, 2.5rem);
            line-height: 1.1;
            margin: 0 0 0.75rem;
            font-weight: 700;
        }
        h3 {
            font-size: clamp(1.25rem, 2.6vw, 1.75rem);
            line-height: 1.15;
            margin: 0 0 0.5rem;
            font-weight: 700;
        }
        p {
            font-size: clamp(1.125rem, 1.6vw, 1.25rem);
            margin: 0.75rem 0;
        }
        ul,
        ol,
        li {
            font-size: clamp(1.125rem, 1.6vw, 1.25rem);
        }
        /* Sections */
        .section {
            padding: 3rem 0;
        }
        .hero {
            padding: 8rem 0 3rem;
            text-align: center;
            .feature {
                display: grid;
                gap: 1.5rem;
                align-items: start;
            }
        }
        /* Privacy policy page: smaller headings */
        .policy h1 {
            font-size: clamp(1.75rem, 4vw, 3rem);
        }
        .policy h2 {
            font-size: clamp(1.125rem, 2.5vw, 1.75rem);
        }
        /* Extra spacing above hero CTA */
        .hero .cta {
            margin-top: 1.5rem;
        }
        .accent {
            color: var(--yellow);
        }
        /* Marker-style highlight */
        .marker {
            background: linear-gradient(transparent 62%, rgba(255, 214, 0, 0.55) 62%);
            -webkit-box-decoration-break: clone;
            box-decoration-break: clone;
            padding: 0 0.12em;
        }
        .pill {
            display: inline-block;
            background: var(--black);
            color: var(--white);
            font-weight: 700;
            padding: 0.6rem 1.1rem;
            border-radius: 999px;
            letter-spacing: 1.25px;
            font-size: 1.35rem;
            margin-bottom: 0.75rem;
        }
        /* Feature sections */
        .features {
            display: grid;
            gap: 8rem;
        }
        .feature {
            display: grid;
            gap: 3rem;
            align-items: start;
        }
        .feature__title {
            margin: 0 0 2rem;
            font-size: clamp(2.1rem, 3vw, 3.5rem);
            line-height: 1.12;
            text-wrap: balance;
        }
        .feature__content {
            align-self: start;
            font-size: clamp(1.35rem, 2.6vw, 1.7rem);
            line-height: 1.55;
        }
        .feature__content >:first-child {
            margin-top: 0;
        }
        .feature__content p {
            margin: 0.5rem 0;
        }
        .feature__img {
            display: grid;
            place-items: center;
            background: var(--yellow);
            color: var(--black);
            border: 3px solid var(--black);
            border-radius: 14px;
            box-shadow: 8px 8px 0 var(--black);
            font-weight: 700;
            letter-spacing: 0.5px;
        }
        .feature__img img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            border-radius: 10px;
            display: block;
        }
        /* Gallery (horizontal scroll) */
        .gallery {
            overflow-x: auto;
            -webkit-overflow-scrolling: touch;
            scroll-snap-type: x proximity;
            padding: 0.25rem;
        }
        .gallery__item {
            flex: 0 0 auto;
            width: clamp(200px, 32vw, 320px);
            border: 3px solid var(--black);
            border-radius: 12px;
            box-shadow: 6px 6px 0 var(--black);
            background: var(--white);
            overflow: hidden;
            scroll-snap-align: start;
        }
        .gallery__img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            display: block;
        }
        [data-theme="dark"] .gallery__item {
            background: var(--black);
            border-color: var(--white);
            box-shadow: 6px 6px 0 var(--white);
        }
        /* Horizontal gallery */
        .gallery {
            margin: 1rem 0 2rem;
        }
        .gallery__track {
            display: flex;
            gap: 4rem;
            overflow-x: auto;
            padding-bottom: 0.5rem;
            scroll-snap-type: x mandatory;
            -webkit-overflow-scrolling: touch;
        }
        .gallery__track::-webkit-scrollbar {
            height: 8px;
        }
        .gallery__track::-webkit-scrollbar-thumb {
            background: var(--gray);
            border-radius: 4px;
        }
        .gallery__item {
            flex: 0 0 auto;
            width: 260px;
            border: 3px solid var(--black);
            border-radius: 12px;
            box-shadow: 8px 8px 0 var(--black);
            background: var(--white);
            scroll-snap-align: start;
            overflow: hidden;
        }
        .gallery__img {
            display: block;
            width: 100%;
            height: auto;
        }
        /* Text-only feature helper */
        .feature--no-media .feature__media {
            display: none;
        }
        @media(min-width: 720px) {
            .feature--no-media .feature__title,
            .feature--no-media .feature__content {
                grid-column: 1;
            }
        }
        /* Dark theme adjustments for gallery */
        [data-theme="dark"] .gallery__item {
            border-color: var(--white);
            box-shadow: 8px 8px 0 var(--white);
            background: var(--black);
        }
        @media(min-width: 720px) {
            .feature {
                grid-template-columns: 1fr 1fr;
                /* tighter vertical spacing between title and content */
                row-gap: 0.25rem;
                column-gap: 3rem;
                grid-auto-flow: dense;
            }
            /* Default layout: media left, text right */
            .feature__media {
                grid-column: 1;
                grid-row: 1;
            }
            .feature__title {
                grid-column: 2;
            }
            .feature__content {
                grid-column: 2;
                grid-row: 1;
                padding-top: 0;
            }
            /* Alt layout: media right, text left */
            .feature--alt .feature__media {
                grid-column: 2;
                grid-row: 1;
            }
            .feature--alt .feature__title {
                grid-column: 1;
            }
            .feature--alt .feature__content {
                grid-column: 1;
                grid-row: 1;
                padding-top: 0;
            }
            /* feature titles span the full text column */
            /* When text column is on the left, drop left padding for a clean edge */
            .feature--alt .feature__content {
                padding-left: 0;
            }
        }
        /* Product card */
        .products {
            display: grid;
            grid-template-columns: 1fr;
            gap: 1.25rem;
            margin-top: 2rem;
        }
        .card {
            position: relative;
            overflow: hidden;
            border: 3px solid var(--black);
            padding: 1.25rem;
            border-radius: 14px;
            box-shadow: 8px 8px 0 var(--yellow);
            background: var(--white);
            transition: transform 80ms ease, box-shadow 120ms ease, background-color 140ms ease, color 140ms ease;
        }
        .card__inner {
            position: relative;
            z-index: 1;
        }
        /* Sliding overlay for hover effect */
        .card::before {
            content: "";
            position: absolute;
            inset: 0;
            background: var(--black);
            transform: translateX(-105%);
            transition: transform 260ms ease;
            z-index: 0;
        }
        .card h3 {
            font-size: clamp(1.35rem, 2.2vw, 1.75rem);
            margin: 0 0 0.25rem;
        }
        .card p {
            margin: 0.25rem 0;
        }
        .card--click {
            display: block;
            color: var(--black);
            text-decoration: none;
        }
        .card--click:hover {
            transform: none;
            box-shadow: 12px 12px 0 var(--gray);
        }
        /* Highlighted product card (yellow base -> black on hover) */
        .card--highlight {
            background: var(--yellow);
            color: var(--black);
            box-shadow: 10px 10px 0 var(--black);
            border-color: var(--black);
        }
        .card--highlight.card--click:hover {
            color: var(--white);
            box-shadow: 12px 12px 0 var(--gray);
        }
        .card--highlight.card--click:hover::before {
            transform: translateX(0);
        }
        /* Ensure content sits above the overlay */
        .card--click > * {
            position: relative;
            z-index: 1;
        }
        /* Motion preferences */
        @media(prefers-reduced-motion: reduce) {
            .card::before {
                transition: none;
            }
            .card--click:hover {
                transform: none;
            }
        }
        @media(min-width: 720px) {
            .products {
                grid-template-columns: repeat(2, 1fr);
            }
        }
        /* Features grid (3-column responsive) */
        .features-grid {
            display: grid;
            grid-template-columns: 1fr;
            gap: 1.25rem;
            margin-top: 2rem;
        }
        @media(min-width: 720px) {
            .features-grid {
                grid-template-columns: repeat(2, 1fr);
            }
        }
        @media(min-width: 1100px) {
            .features-grid {
                grid-template-columns: repeat(3, 1fr);
            }
        }
        /* Footer */
        footer {
            background: var(--yellow);
            color: var(--black);
            text-align: center;
            padding: 1.5rem 0;
            font-weight: 700;
            font-size: 1.05rem;
            border-top: 8px solid var(--black);
        }
        .footer-nav {
            margin-bottom: 1rem;
        }
        .footer-nav a {
            text-decoration: none;
            font-weight: 700;
            font-size: clamp(1.125rem, 2.2vw, 1.4rem);
            letter-spacing: 0.5px;
        }
        .footer-nav a:hover {
            text-decoration: underline;
        }
        footer p {
            font-size: 0.9rem;
            font-weight: 600;
            margin: 0.25rem 0 0;
        }
        a {
            color: var(--black);
            text-decoration: underline;
        }
        .link-underline {
            text-decoration: underline;
            text-underline-offset: 3px;
            text-decoration-thickness: 2px;
        }
        /* Buttons match highlighted card style */
        .btn {
            position: relative;
            overflow: hidden;
            display: inline-block;
            background: var(--yellow);
            color: var(--black);
            text-decoration: none;
            font-weight: 700;
            padding: 0.9rem 1.15rem;
            border-radius: 12px;
            border: 3px solid var(--black);
            box-shadow: 8px 8px 0 var(--black);
            transition: box-shadow 120ms ease, color 140ms ease;
        }
        .btn::before {
            content: "";
            position: absolute;
            inset: 0;
            background: var(--black);
            transform: translateX(-105%);
            transition: transform 260ms ease;
            z-index: 0;
        }
        .btn:hover {
            box-shadow: 10px 10px 0 var(--gray);
            color: var(--white);
        }
        .btn:hover::before {
            transform: translateX(0);
        }
        .btn > * {
            position: relative;
            z-index: 1;
        }
        /* Brand-colored text selection */
        ::selection {
            background: var(--yellow);
            color: var(--black);
        }
        ::-moz-selection {
            background: var(--yellow);
            color: var(--black);
        }
        /* Store buttons */
        .store-buttons {
            display: flex;
            flex-wrap: wrap;
            gap: 0.75rem;
            align-items: center;
        }
        .store-buttons--center {
            justify-content: center;
        }
        /* Approved badges should not be restyled; just size the container */
        .store-badge {
            display: inline-block;
            line-height: 0;
        }
        .store-badge img {
            height: 44px;
            width: auto;
            display: block;
        }
        .legal-notice {
            font-size: 0.8rem;
            opacity: 0.8;
            margin-top: 0.5rem;
        }
        .center {
            text-align: center;
        }
        /* Dark theme overrides */
        [data-theme="dark"] {
            /* Soften extremes for dark mode */
            --black: #1e1e1e; /* softer near-black */
            --white: #f2f2f2; /* softer near-white */
            --gray: #9a9a9a; /* slightly lighter gray for contrast */
        }
        [data-theme="dark"] body {
            background: var(--black);
            color: var(--white);
        }
        [data-theme="dark"] main {
            background: var(--black);
        }
        [data-theme="dark"] a {
            color: var(--white);
        }
        /* Keep the home icon black in dark mode */
        [data-theme="dark"] .home-link {
            color: var(--black);
        }
        [data-theme="dark"] .pill {
            background: var(--white);
            color: var(--black);
        }
        [data-theme="dark"] .feature__img {
            border-color: var(--white);
            box-shadow: 8px 8px 0 #333333;
        }
        [data-theme="dark"] .card {
            background: var(--black);
            color: var(--white);
            border-color: var(--white);
            box-shadow: 8px 8px 0 var(--white);
        }
        [data-theme="dark"] .card--click {
            color: var(--white);
        }
        [data-theme="dark"] .btn {
            box-shadow: 8px 8px 0 var(--white);
            color: var(--black);
            border-color: var(--white);
        }
        /* Hover interaction: white surface, black text, gray shadow */
        [data-theme="dark"] .btn:hover {
            color: var(--black);
            box-shadow: 10px 10px 0 var(--gray);
            border-color: var(--white);
        }
        [data-theme="dark"] .btn::before {
            background: var(--white);
        }
        [data-theme="dark"] .card::before {
            background: var(--white);
        }
        [data-theme="dark"] .card--click:hover {
            background: var(--white);
            color: var(--black);
            box-shadow: 12px 12px 0 var(--gray);
        }
        /* Keep highlighted product cards yellow in dark mode */
        [data-theme="dark"] .card--highlight {
            background: var(--yellow);
            color: var(--black);
            border-color: var(--white);
            box-shadow: 10px 10px 0 var(--white);
        }
        [data-theme="dark"] .card--highlight.card--click {
            color: var(--black);
        }
        [data-theme="dark"] .card--highlight.card--click:hover {
            color: var(--black);
        }
        /* Keep footer brand colors in dark mode */
        [data-theme="dark"] footer {
            background: var(--yellow);
            color: var(--black);
            border-top-color: var(--black);
        }
        [data-theme="dark"] .footer-nav a {
            color: var(--black);
        }
    </style>
</head>
<body>
    <a href="{{ '/' | url }}" class="home-link" aria-label="Home" title="Home">
        <svg
            viewbox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
            aria-hidden="true">
            <path d="M3 11l9-8 9 8"></path>
            <path d="M5 11v9h5v-6h4v6h5v-9"></path>
        </svg>
    </a>
    <button
        id="theme-toggle" class="theme-toggle" aria-label="Toggle dark mode" aria-pressed="false" title="Toggle theme">
        <!-- Show moon in light mode, sun in dark mode -->
        <svg
            class="icon icon-moon"
            viewbox="0 0 24 24"
            aria-hidden="true"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round">
            <path d="M21 12.79A9 9 0 1 1 11.21 3a7 7 0 0 0 9.79 9.79Z"></path>
        </svg>
        <svg
            class="icon icon-sun"
            viewbox="0 0 24 24"
            aria-hidden="true"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round">
            <circle cx="12" cy="12" r="5"></circle>
            <line x1="12" y1="1" x2="12" y2="3"></line>
            <line x1="12" y1="21" x2="12" y2="23"></line>
            <line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line>
            <line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line>
            <line x1="1" y1="12" x2="3" y2="12"></line>
            <line x1="21" y1="12" x2="23" y2="12"></line>
            <line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line>
            <line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line>
        </svg>
    </button>
    <!-- Top bar removed -->
    <main>
        {{ content | safe }}
    </main>
    <footer>
        <div class="container">
            <nav class="footer-nav">
                <a href="{{ '/' | url }}">Home</a>
                <span aria-hidden="true">&middot;</span>
                <a href="{{ '/varro-money/' | url }}">Varro Money</a>
            </nav>
            <p>&copy; 2025 Varro Software</p>
        </div>
    </footer>
    <script>
        (function () {
            var btn = document.getElementById('theme-toggle');
            if (! btn) 
                return;
            
            function getTheme() {
                return document.documentElement.getAttribute('data-theme') || 'light';
            }
            function setTheme(theme) {
                document.documentElement.setAttribute('data-theme', theme);
                try {
                    localStorage.setItem('theme', theme);
                } catch (e) {}btn.setAttribute(
                    'aria-pressed', theme === 'dark'
                    ? 'true'
                    : 'false');
                btn.title = theme === 'dark'
                    ? 'Switch to light mode'
                    : 'Switch to dark mode';
            }
            function userPrefSet() {
                try {
                    return !!localStorage.getItem('theme');
                } catch (e) {
                    return false;
                }
            }
            // Sync initial state
            setTheme(getTheme());
            // Follow system preference when no user preference is stored
            var mq = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)');
            function applySystemTheme(event) {
                if (! mq) 
                    return;
                
                if (userPrefSet()) 
                    return;
                 // Respect explicit user choice
                var prefersDark = event && 'matches' in event
                    ? event.matches
                    : mq.matches;
                document.documentElement.setAttribute(
                    'data-theme', prefersDark
                    ? 'dark'
                    : 'light');
                // Update control state without persisting
                btn.setAttribute(
                    'aria-pressed', prefersDark
                    ? 'true'
                    : 'false');
                btn.title = prefersDark
                    ? 'Switch to light mode'
                    : 'Switch to dark mode';
            }
            applySystemTheme();
            if (mq) {
                if (typeof mq.addEventListener === 'function') {
                    mq.addEventListener('change', applySystemTheme);
                } else if (typeof mq.addListener === 'function') { // Safari <14 fallback
                    mq.addListener(applySystemTheme);
                }
            }
            btn.addEventListener('click', function () {
                var next = getTheme() === 'dark'
                    ? 'light'
                    : 'dark';
                setTheme(next);
            });
        })();
    </script>
</body></html>